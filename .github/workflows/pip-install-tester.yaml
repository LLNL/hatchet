name: pip install tester

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop, releases/** ]
  # TODO Replace the workflow_dispatch to schedule
  # schedule:
  #   # - cron: '0 16 16 * *'
  #   - cron: '0 16 * * *'

jobs:
  pip_test:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9]
        hatchet-version: ['2022.1.0', '2022.1.1', "2022.2.0"]

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ format('v{0}', matrix.hatchet-version) }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build unit test dependencies
      run: |
        python -m pip install --upgrade pip pytest

    - name: Build Python 2.7 dependencies
      if: ${{ matrix.python-version == 2.7 }}
      run: |
        python -m pip install --upgrade numexpr==2.7.3
        python -m pip install tables==3.5.2 # Last version of tables to support Python 2.7

    - name: Build Python 3 dependencies
      if: ${{ matrix.python-version != 2.7 }}
      run: |
        python -m pip install tables

    - name: Install Hatchet
      env:
        HATCHET_VERSION: ${{ matrix.hatchet-version }}
      run: |
        curr_dir=$(pwd)
        cd ~
        python -m pip install llnl-hatchet==$HATCHET_VERSION
        cd $curr_dir

    - name: Show packages
      run: |                                                                
        python -m pip list                                                  
                                                                            
    - name: Prep tests                                                      
      env:                                                                  
        HATCHET_VERSION: ${{ matrix.hatchet-version }}                      
        PYTHON_VERSION: ${{ matrix.python-version }}                        
      run: |
        cp -r ./hatchet/tests ~
        test_dir="tests-$HATCHET_VERSION-$PYTHON_VERSION"
        mv ~/tests ~/$test_dir
        cat > ~/$test_dir/pytest.ini << EOF
        [pytest]
        addopts = --durations=20 -ra
        testpaths = .
        python_files = *.py
        EOF

    - name: Test Hatchet
      env:
        HATCHET_VERSION: ${{ matrix.hatchet-version }}
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        curr_dir=$(pwd)
        cd ~
        test_dir="tests-$HATCHET_VERSION-$PYTHON_VERSION"
        pytest -vv $test_dir
        cd $curr_dir
