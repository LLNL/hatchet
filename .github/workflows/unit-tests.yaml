name: unit tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop, releases/** ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # TODO: add macos-latest
        # TODO: change ubuntu-20.04 back to ubuntu-latest when the following issue is resolved:
        #       https://github.com/actions/setup-python/issues/162
        os: [ubuntu-20.04]
        # TODO: add pypy2, pypy3
        python-version: [3.5, 3.6, 3.7, 3.8]
        exclude:
          - os: macos-latest
            python-version: [3.5, 3.6]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python3 dependencies
      run: |
        python -m pip install --upgrade pip pytest
        pip install -r requirements.txt
        # Optional Dependency for HDF Checkpointing
        pip install tables
        python setup.py install
        python setup.py build_ext --inplace
        python -m pip list

    - name: Update Black
      if: ${{ matrix.python-version == 3.7 }}
      run: |
        pip install flake8-pytest-importorskip
        pip install --upgrade click==8.0.4
        pip install black==21.12b0
        pip install flake8==4.0.1

    - name: Lint and Format Check with Flake8 and Black
      if: ${{ matrix.python-version == 3.7 }}
      run: |
        black --diff --check .
        flake8

    - name: Check License Headers
      run: |
        python license.py verify

    - name: Update Coverage
      if: ${{ matrix.python-version == 3.8 }}
      run: |
        pip install coverage==6.2

    - name: Basic Test with pytest
      run: |
        PYTHONPATH=. coverage run $(which pytest)

    - name: Clone Caliper
      uses: actions/checkout@v2
      with:
        repository: LLNL/Caliper
        path: Caliper
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Caliper
      working-directory: Caliper
      run: |
        echo -e "PWD: $(pwd)"
        mkdir build && mkdir install
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=../install ../
        make VERBOSE=1
        make install
        export PATH=$(pwd)/../install/bin:${PATH}
        echo -e "PATH=${PATH}"
        cd $GITHUB_WORKSPACE
        echo -e "PWD:${PWD}"
        which cali-query

#    - name: Build Timemory for Python 3.6
#      if: ${{ matrix.python-version == 3.6 }}
#      run: |
#        python -m pip install --upgrade scikit-build
#        # python -m pip install --upgrade --no-cache-dir --no-deps -v --pre timemory --install-option=--disable-{c,gotcha,tools}
#        python -m pip install --upgrade --no-cache-dir --no-deps -v timemory==3.2.0.dev4 --install-option=--disable-{c,gotcha,tools}

    - name: Test Caliper and Timemory Support with pytest
      run: |
        PYTHONPATH=. coverage run $(which pytest)

#    - name: "Upload coverage to Codecov"
#      uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70 # @v2.1.0
#      if: ${{ matrix.python-version >= 3.7 }}
#      with:
#        fail_ci_if_error: true
#        verbose: true
#        env_vars: OS,PYTHON
#        directory: ./.coverage
